name: GitLab Merge Request

on:
  release:
    types: [published]

jobs:
  gitlab-mr:
    runs-on: ubuntu-latest
    env:
      GITLAB_PROJECT_ID: 69246121
      GITLAB_REPO: https://gitlab.com/ctrl-iq/linux/rocky/rlc/src/rlc-cloud-repos.git
      GITLAB_PROJECT_NAME: rlc-cloud-repos
      GITLAB_TARGET_BRANCH: ciq/r8
      PERIDOT_CLIENT_ID: ${{ vars.PERIDOT_CLIENT_ID }}
      PERIDOT_ENDPOINT: internal-peridot-api.prod.ciq.dev
      PERIDOT_HDR_ENDPOINT: hdr.ciq.com
    steps:
      - uses: actions/checkout@v4

      - name: Set up git
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Clean up previous gitlab-tmp directory
        run: |
          rm -rf gitlab-tmp

      - name: Clone GitLab repo
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          git clone https://service:${GITLAB_TOKEN}@${GITLAB_REPO#https://} gitlab-tmp

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Download release assets (tarball and spec)
        if: ${{ !env.ACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          TARBALL="rlc.cloud-repos-${VERSION}.tar.gz"
          mkdir -p /tmp/dist
          gh release download ${{ github.ref_name }} --pattern "$TARBALL" --pattern 'python3-rlc-cloud-repos.spec' --repo ${{ github.repository }} --dir /tmp/dist

      # Comment out the above step and uncomment the following if you are testing locally using act
      - name: "Bypass: Copy local assets for testing"
        if: ${{ env.ACT }}
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          TARBALL="rlc.cloud-repos-${VERSION}.tar.gz"

          mkdir -p /tmp/dist
          cp -v "dist/$TARBALL" dist/python3-rlc-cloud-repos.spec /tmp/dist || true

      - name: Prepare dist-git layout and copy files
        run: |
          cd gitlab-tmp
          git checkout $GITLAB_TARGET_BRANCH

          BRANCH=update-release-${GITHUB_REF_NAME}
          git checkout -b $BRANCH

          mkdir -p SOURCES SPECS

          VERSION="${GITHUB_REF_NAME#v}"
          TARBALL="rlc.cloud-repos-${VERSION}.tar.gz"
          cp /tmp/dist/$TARBALL SOURCES/

          cp /tmp/dist/python3-rlc-cloud-repos.spec SPECS/

          git add SPECS/python3-rlc-cloud-repos.spec

          META=.$GITLAB_PROJECT_NAME.metadata
          sha256sum SOURCES/$TARBALL > $META
          git add $META

          git commit -m "Update release assets for ${{ github.ref_name }}"

          if [ -n "${{ env.ACT }}" ]; then
            echo "Running in ACT mode, skipping git push"
          else
            git push -u origin $BRANCH
          fi

      - name: Upload the tarball to peridot's lookaside cache
        if: ${{ !env.ACT }}
        env:
          PERIDOT_CLIENT_ID: ${{ env.PERIDOT_CLIENT_ID }}
          PERIDOT_CLIENT_SECRET: ${{ secrets.PERIDOT_CLIENT_SECRET }}
          PERIDOT_ENDPOINT: ${{ env.PERIDOT_ENDPOINT }}
          PERIDOT_HDR_ENDPOINT: ${{ env.PERIDOT_HDR_ENDPOINT }}
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          TARBALL="rlc.cloud-repos-${VERSION}.tar.gz"
          curl -LO https://mirror.potato.shrug.pw/peridot
          chmod +x peridot
          ./peridot lookaside upload gitlab-tmp/SOURCES/$TARBALL

      - name: Create GitLab Merge Request
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          BRANCH=update-release-${{ github.ref_name }}
          GITLAB_MR_TITLE="Auto-update to ${{ github.ref_name }}"
          if [ -n "${{ env.ACT }}" ]; then
            cmd="echo curl"
          else
            cmd="curl"
          fi
          $cmd --fail -X POST "https://gitlab.com/api/v4/projects/${GITLAB_PROJECT_ID}/merge_requests" \
            --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
            --form "source_branch=$BRANCH" \
            --form "target_branch=$GITLAB_TARGET_BRANCH" \
            --form "title=$GITLAB_MR_TITLE" \
            --form "remove_source_branch=true"
